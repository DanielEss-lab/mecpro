#!/bin/bash
#PBS -l nodes=1:ppn=6,pmem=2gb,walltime=02:00:00
#PBS -N ~JOB~
#PBS -j oe
#PBS -M  dhe@chem.byu.edu

export TEMPORARY_DIR="/tmp/$PBS_JOBID"
export GAUSS_SCRDIR="$TEMPORARY_DIR/temporary_files"
export JOBNAME=~JOB~
export JOBSOURCE="$PBS_O_WORKDIR"

#set up function.  this isn't called/run here.  It's just used
#   if the job is canceled via a signal

# THIS FILE IS NOT TESTED BUT MAY ASSIST ANYONE USING PBS SUBMISSION INSTEAD OF SLURM
cleanup_scratch()
{
        echo "Deleting inside signal handler, meaning I probably either hit the walltime, or deleted the job using qdel"

        ##NOTE: IF YOU WANT TO KEEP ANY OF THE FILES FROM $TEMPORARY_DIR WHEN THE JOB IS DELETED
        #   BY qdel OR KILLED BECAUSE OF WALLTIME, USE A COMMAND LIKE THIS:
        echo "Copying resulting data to $JOBSOURCE"
        cp -v "$TEMPORARY_DIR/$JOBNAME"*.{log,com,next.mecp,chk} "$PBS_O_WORKDIR"
        echo "---"

        echo "Changing directory back to submission directory at $PBS_O_WORKDIR"
        cd "$PBS_O_WORKDIR"

        echo "Deleting directories at end of script"
        rm -rfv "$GAUSS_SCRDIR"
        rm -rfv "$TEMPORARY_DIR"
        
        echo "---"
        echo "Signal handler ending time:"
        date
        exit 0
}

#Associate the function "cleanup_scratch" with the TERM signal, which is usually how jobs get killed
trap 'cleanup_scratch' TERM

#basic diagnostic output
echo "---"
echo "Beginning-of-job Diagnostic information:"
echo "---"
echo "Nodes assigned:"
cat "$PBS_NODEFILE"
echo "---"
echo "Temporary Directory:"
echo "$TEMPORARY_DIR"
echo "---"
echo "Scratch Directory:"
echo "$GAUSS_SCRDIR"
echo "---"
echo "Job Source Directory:"
echo "$JOBSOURCE"
echo "---"
echo "Current Time:"
date
echo "---"



#create temporary directory
echo "Creating Temporary directory at $TEMPORARY_DIR"
mkdir -pv "$TEMPORARY_DIR" 2>&1
echo "---"

#create scratch directory
echo "Creating scratch directory at $GAUSS_SCRDIR"
mkdir -pv "$GAUSS_SCRDIR" 2>&1
echo "---"


#copy working data information from $JOBSOURCE/$JOBNAME* to $TEMPORARY_DIR
echo "Copying working data information from $JOBSOURCE/$JOBNAME* to $TEMPORARY_DIR"
cp -v "$JOBSOURCE/$JOBNAME"* "$TEMPORARY_DIR"
echo "---"

#changing directory to $TEMPORARY_DIR
echo "Changing directory to temporary dir at $TEMPORARY_DIR"
cd "$TEMPORARY_DIR"
echo "---"

echo "Starting MECP Optimization at:"
date


####################################################################################

#the actual MECP run starts here
python $MECPRO_HOME/pylib/mecp.py $JOBNAME &
pid=$!
trap "kill $pid; cleanup_scratch; exit 1" TERM
wait $pid
#####################################################################################

echo "---"
echo "MECP Optimization ended at:"
date
echo "---"

cleanup_scratch

echo "---"
echo "Job ending time:"
date
echo "---"

####################################################################################

